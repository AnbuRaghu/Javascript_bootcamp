make network request with fetch
--------------------------------


// API - Application Programming Interface: software to communicate with other software
// API - helpful service
// REST API

// CRUD 
// create POST
// read GET
// update PUT / PATCH
// delete DELETE

// http://jsonplaceholder.typicode.com/posts
// JSON - JavaScript Object Notation
// fetch(url)
// jsonplaceholder.typicode.com

// GET /posts/1 - single blog post
// POST /posts
const blogPost = {
  title: "Cool post",
  body: "lkajsdflkjasjlfda",
  userId: 1  
}



post request: we need additional parameters which are method,headers and body
header usualyy tells what kind of data type we send
body contains the data we send this should be a json object not js object..we can change js object as json as shown below in the example

fetch('https://jsonplaceholder.typicode.com/posts', {
  method: "POST",
  headers: {
     "Content-Type": "application/json" 
  },
  body: JSON.stringify(blogPost)
})
  .then(response => response.json())
  .then(data => console.log(data))
  
  
  get request
  -----------------------------
  fetch('https://jsonplaceholder.typicode.com/posts')
  .then(response => response.json())
  .then(data => console.log(data.title))
  
  
  
  what if we get an error how to handle it
  ----------------------------------------------
  
  
  fetch('https://jsonplaceholder.typicode.com/pots/1')
  .then(response => {
      if (!response.ok) { resÃ¼onse contains ok property which is 2xx range code
        throw new Error(response.status);  
        // 4xx:400range status code means it's fault of programmer or user
        // 5xx:5000nrange means server had a problem which means.this isn't our fault
      }
   return response.json()
  })
  .then(data => console.log(data))
  .catch(error => console.error(error))